# ===========================================
# SCRIPT DE BASCULEMENT D'ENVIRONNEMENT
# ===========================================

param(
    [Parameter(Mandatory=$true)]
    [ValidateSet("dev", "test", "prod")]
    [string]$Environment
)

$envFiles = @{
    "dev" = ".env.development"
    "test" = ".env.test"
    "prod" = ".env.production"
}

$envNames = @{
    "dev" = "D√©veloppement"
    "test" = "Test/Staging"
    "prod" = "Production"
}

$sourceFile = $envFiles[$Environment]
$targetFile = ".env.local"

Write-Host "üîÑ Basculement vers l'environnement: $($envNames[$Environment])" -ForegroundColor Yellow
Write-Host "=" * 50

# V√©rifier que le fichier source existe
if (-not (Test-Path $sourceFile)) {
    Write-Host "‚ùå Erreur: Le fichier $sourceFile n'existe pas!" -ForegroundColor Red
    Write-Host "üí° Cr√©ez d'abord ce fichier ou ex√©cutez la configuration appropri√©e." -ForegroundColor Cyan
    exit 1
}

# Sauvegarder l'environnement actuel si .env.local existe
if (Test-Path $targetFile) {
    $backupFile = ".env.local.backup"
    Copy-Item $targetFile $backupFile -Force
    Write-Host "üíæ Environnement actuel sauvegard√© dans $backupFile" -ForegroundColor Green
}

# Copier le nouvel environnement
try {
    Copy-Item $sourceFile $targetFile -Force
    Write-Host "‚úÖ Basculement r√©ussi vers l'environnement $($envNames[$Environment])" -ForegroundColor Green
    
    # Afficher quelques informations sur l'environnement
    Write-Host ""
    Write-Host "üìã Informations sur l'environnement:" -ForegroundColor Cyan
    
    $content = Get-Content $targetFile
    $supabaseUrl = ($content | Where-Object { $_ -match "NEXT_PUBLIC_SUPABASE_URL=" }) -replace "NEXT_PUBLIC_SUPABASE_URL=", ""
    $nodeEnv = ($content | Where-Object { $_ -match "NODE_ENV=" }) -replace "NODE_ENV=", ""
    $appUrl = ($content | Where-Object { $_ -match "NEXT_PUBLIC_APP_URL=" }) -replace "NEXT_PUBLIC_APP_URL=", ""
    
    if ($supabaseUrl) { Write-Host "üóÑÔ∏è Base de donn√©es: $supabaseUrl" -ForegroundColor White }
    if ($nodeEnv) { Write-Host "‚öôÔ∏è Mode: $nodeEnv" -ForegroundColor White }
    if ($appUrl) { Write-Host "üåê URL: $appUrl" -ForegroundColor White }
    
    Write-Host ""
    Write-Host "üöÄ Vous pouvez maintenant d√©marrer l'application avec: npm run dev" -ForegroundColor Green
    
} catch {
    Write-Host "‚ùå Erreur lors du basculement: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}

Write-Host ""
Write-Host "üîß Commandes utiles:" -ForegroundColor Magenta
Write-Host "‚Ä¢ npm run test-env        - Tester la connexion DB"
Write-Host "‚Ä¢ npm run health:check    - V√©rifier la sant√© de l'app"
Write-Host "‚Ä¢ npm run dev            - D√©marrer le serveur"