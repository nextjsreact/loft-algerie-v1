/**
 * Script pour corriger les noms d'utilisateurs dans la base de donn√©es
 */

import { createClient } from '@supabase/supabase-js'
import dotenv from 'dotenv'

// Charger les variables d'environnement
dotenv.config()

// Configuration Supabase
const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY

if (!supabaseUrl || !supabaseServiceKey) {
  console.error('‚ùå Variables d\'environnement Supabase manquantes')
  console.log('Assurez-vous que NEXT_PUBLIC_SUPABASE_URL et SUPABASE_SERVICE_ROLE_KEY sont d√©finies')
  process.exit(1)
}

const supabase = createClient(supabaseUrl, supabaseServiceKey)

async function fixUserNames() {
  console.log('üîß Correction des noms d\'utilisateurs...')
  
  try {
    // R√©cup√©rer tous les utilisateurs avec des noms g√©n√©riques
    const { data: users, error: fetchError } = await supabase
      .from('profiles')
      .select('id, full_name, email')
      .or('full_name.eq.member1,full_name.ilike.%member%')

    if (fetchError) {
      throw fetchError
    }

    console.log(`üìã Trouv√© ${users?.length || 0} utilisateurs √† corriger`)

    if (!users || users.length === 0) {
      console.log('‚úÖ Aucun utilisateur √† corriger')
      return
    }

    // Corriger chaque utilisateur
    for (const user of users) {
      let newName = user.full_name

      // Corrections sp√©cifiques
      if (user.full_name === 'member1') {
        newName = 'Membre 1'
      } else if (user.full_name?.toLowerCase().includes('member')) {
        // Extraire le num√©ro du membre si possible
        const match = user.full_name.match(/member(\d+)/i)
        if (match) {
          newName = `Membre ${match[1]}`
        } else {
          newName = 'Membre'
        }
      }

      // Si le nom a chang√©, mettre √† jour
      if (newName !== user.full_name) {
        const { error: updateError } = await supabase
          .from('profiles')
          .update({ full_name: newName })
          .eq('id', user.id)

        if (updateError) {
          console.error(`‚ùå Erreur lors de la mise √† jour de ${user.email}:`, updateError.message)
        } else {
          console.log(`‚úÖ ${user.email}: "${user.full_name}" ‚Üí "${newName}"`)
        }
      }
    }

    console.log('üéâ Correction des noms d\'utilisateurs termin√©e !')

  } catch (error) {
    console.error('‚ùå Erreur lors de la correction des noms:', error.message)
  }
}

// Ex√©cuter le script
fixUserNames()