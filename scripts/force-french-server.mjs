/**
 * Script pour forcer le fran√ßais c√¥t√© serveur
 */

import fs from 'fs'
import path from 'path'

async function forceFrenchServer() {
  console.log('üá´üá∑ For√ßage du fran√ßais c√¥t√© serveur...')
  
  try {
    // 1. Cr√©er un fichier de configuration forc√©e
    const configContent = `
// Configuration forc√©e pour le fran√ßais
export const FORCE_FRENCH_CONFIG = {
  defaultLanguage: 'fr',
  fallbackLanguage: 'fr',
  forceLanguage: true,
  timestamp: ${Date.now()}
};

// Fonction pour forcer le fran√ßais
export function getForcedLanguage() {
  return 'fr';
}

// Middleware pour forcer le fran√ßais
export function forceFrenchMiddleware(request) {
  return {
    language: 'fr',
    forced: true,
    timestamp: new Date().toISOString()
  };
}
`
    
    fs.writeFileSync('lib/i18n/force-french.ts', configContent)
    console.log('‚úÖ Configuration fran√ßaise forc√©e cr√©√©e')

    // 2. Cr√©er un fichier de r√©initialisation des cookies
    const cookieResetContent = `
// Script de r√©initialisation des cookies pour le fran√ßais
export function resetToFrench() {
  if (typeof window !== 'undefined') {
    // Nettoyer tous les cookies de langue
    const cookiesToClear = ['language', 'i18nextLng', 'locale'];
    cookiesToClear.forEach(name => {
      document.cookie = \`\${name}=; path=/; expires=Thu, 01 Jan 1970 00:00:00 GMT\`;
    });
    
    // D√©finir le fran√ßais
    document.cookie = 'language=fr; path=/; max-age=31536000; SameSite=Lax';
    document.cookie = 'i18nextLng=fr; path=/; max-age=31536000; SameSite=Lax';
    
    // LocalStorage
    try {
      localStorage.setItem('i18nextLng', 'fr');
      localStorage.setItem('language', 'fr');
    } catch(e) {}
    
    return true;
  }
  return false;
}

// Auto-ex√©cution si dans le navigateur
if (typeof window !== 'undefined') {
  resetToFrench();
}
`
    
    fs.writeFileSync('lib/i18n/reset-french.ts', cookieResetContent)
    console.log('‚úÖ Script de r√©initialisation cr√©√©')

    // 3. Cr√©er une page de redirection
    const redirectPageContent = `
<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Redirection - Loft Alg√©rie</title>
    <meta http-equiv="refresh" content="0;url=/dashboard">
    <script>
        // Configuration imm√©diate du fran√ßais
        document.cookie = 'language=fr; path=/; max-age=31536000; SameSite=Lax';
        localStorage.setItem('i18nextLng', 'fr');
        
        // Redirection imm√©diate
        window.location.replace('/dashboard');
    </script>
</head>
<body>
    <p>Redirection vers l'application en fran√ßais...</p>
</body>
</html>
`
    
    fs.writeFileSync('public/fr.html', redirectPageContent)
    console.log('‚úÖ Page de redirection cr√©√©e: /fr.html')

    // 4. Instructions
    console.log('\nüìã Solutions disponibles :')
    console.log('1. Ouvrir dans le navigateur: scripts/immediate-french-fix.html')
    console.log('2. Ou aller directement √†: http://localhost:3000/fr.html')
    console.log('3. Ou utiliser: scripts/set-default-french.html')

    console.log('\nüîß Actions recommand√©es :')
    console.log('1. Ouvrir scripts/immediate-french-fix.html (solution la plus rapide)')
    console.log('2. Attendre 3 secondes pour la redirection automatique')
    console.log('3. Vider le cache du navigateur si n√©cessaire (Ctrl+Shift+R)')

    console.log('\n‚úÖ Configuration fran√ßaise forc√©e pr√™te !')

  } catch (error) {
    console.error('‚ùå Erreur lors du for√ßage:', error.message)
  }
}

// Ex√©cuter le script
forceFrenchServer()